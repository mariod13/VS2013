<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration xmlns="http://schemas.microsoft.com/.NetConfiguration/v2.0">
	<!-- 
        The configSections define a section for ASP.NET Atlas.
  -->
	<configSections>
		<sectionGroup name="microsoft.web" type="Microsoft.Web.Configuration.MicrosoftWebSectionGroup">
			<section name="converters" type="Microsoft.Web.Configuration.ConvertersSection"/>
		</sectionGroup>
	</configSections>
	<!-- 
      The microsoft.web section defines items required for the Atlas framework.
  -->
	<microsoft.web>
		<converters>
			<add type="Microsoft.Web.Script.Serialization.Converters.DataSetConverter"/>
			<add type="Microsoft.Web.Script.Serialization.Converters.DataRowConverter"/>
			<add type="Microsoft.Web.Script.Serialization.Converters.DataTableConverter"/>
		</converters>
	</microsoft.web>
	<appSettings/>
	<connectionStrings>
		<add name="TasksConnectionString" connectionString="Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\Tasks.mdf;Integrated Security=True;User Instance=True" providerName="System.Data.SqlClient"/>
		<add name="pubs" connectionString="Data Source=localhost;Initial Catalog=pubs;Integrated Security=True" providerName="System.Data.SqlClient"/>
	</connectionStrings>
	<system.web>
		<pages>
			<controls>
				<add namespace="Microsoft.Web.UI" assembly="Microsoft.Web.Atlas" tagPrefix="atlas"/>
				<add namespace="Microsoft.Web.UI.Controls" assembly="Microsoft.Web.Atlas" tagPrefix="atlas"/>
			</controls>
		</pages>
		<!-- 
          Set compilation debug="true" to insert debugging 
          symbols into the compiled page. Because this 
          affects performance, set this value to true only 
          during development.
    -->
		<compilation debug="true">
		</compilation>
		<!--
          ASMX is mapped to a new handler so that proxy javascripts can also be served.
    -->
		<httpHandlers>
			<remove verb="*" path="*.asmx"/>
			<add verb="*" path="*.asmx" type="Microsoft.Web.Services.ScriptHandlerFactory" validate="false"/>
		</httpHandlers>
		<httpModules>
			<add name="ScriptModule" type="Microsoft.Web.Services.ScriptModule"/>
		</httpModules>
		<!--
          The <authentication> section enables configuration 
          of the security authentication mode used by 
          ASP.NET to identify an incoming user. 
    -->
		<authentication mode="Windows"/>
		<!--
          The <customErrors> section enables configuration 
          of what to do if/when an unhandled error occurs 
          during the execution of a request. Specifically, 
          it enables developers to configure html error pages 
          to be displayed in place of a error stack trace.

      <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
          <error statusCode="403" redirect="NoAccess.htm"/>
          <error statusCode="404" redirect="FileNotFound.htm"/>
      </customErrors>
    -->
	</system.web>
</configuration>
